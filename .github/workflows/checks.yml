name: awsum checks

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'
      - name: configure
        run: |
          mkdir -p ~/.aws
          
          echo "[default]
          region = ${{ secrets.AWS_REGION }}" > ~/.aws/config
          
          echo "[default]
          aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials
          
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
          
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/awsum-demo.pem
      - name: build
        run: go build
      - name: test
        run: go test -run=. ./...
      - name: install
        run: go install
      - name: demo deploy
        run: |
          BASE_COMMAND="awsum instance shell --name \"awsum-demo\""
          
          $BASE_COMMAND -p "echo \"
          services:
            traefik:
              image: traefik:v3.1
              command:
                - --providers.docker=true
                - --entrypoints.web.address=:80
                - --serversTransport.insecureSkipVerify=false
              ports:
                - \\\"80:80\\\"
              volumes:
                - /var/run/docker.sock:/var/run/docker.sock:ro
              networks:
                - web
          
            app:
              image: traefik/whoami
              labels:
                - \\\"traefik.enable=true\\\"
                - \\\"traefik.http.routers.app.entrypoints=web\\\"
                - \\\"traefik.http.routers.app.service=app\\\"
                - \\\"traefik.http.routers.app.rule=PathPrefix(\\\`/\\\`)\\\"
                - \\\"traefik.http.services.app.loadbalancer.server.port=80\\\"
              networks:
                - web
          
          networks:
            web:
              driver: bridge
            \" > docker.compose.yml
            "
          
            $BASE_COMMAND -p "docker compose -f docker.compose.yml down"
            $BASE_COMMAND -p "docker compose -f docker.compose.yml up -d --scale app=4"
            
            awsum instance load-balance \
              --service "awsum-demo" \
              --name "awsum-demo" \
              --port 443:80 \
              --protocol https:http \
              --certificate "levelshatter.com" \
              --domain "awsum.levelshatter.com"